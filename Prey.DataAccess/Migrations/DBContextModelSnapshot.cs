// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Prey.DataAccess;

namespace Prey.DataAccess.Migrations
{
    [DbContext(typeof(DBContext))]
    partial class DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0-preview7.19362.6");

            modelBuilder.Entity("Prey.Models.Contact", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("DeviceID");

                    b.Property<string>("Name");

                    b.Property<string>("Number");

                    b.HasKey("ID");

                    b.HasIndex("DeviceID", "CreateTime", "ID")
                        .IsUnique()
                        .HasName("Contact_Index");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("Prey.Models.DeviceBase", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Model");

                    b.Property<string>("Name");

                    b.Property<string>("OwnerID");

                    b.HasKey("ID");

                    b.ToTable("DeviceBase");

                    b.HasDiscriminator<string>("Discriminator").HasValue("DeviceBase");
                });

            modelBuilder.Entity("Prey.Models.Location", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("DeviceID");

                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.HasIndex("DeviceID", "CreateTime", "ID")
                        .IsUnique()
                        .HasName("Location_Index");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Prey.Models.Person", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("Location");

                    b.Property<string>("Name");

                    b.Property<string>("Remark");

                    b.HasKey("ID");

                    b.HasIndex("ID")
                        .IsUnique()
                        .HasName("Person_Index");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("Prey.Models.UploadFile", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("DeviceID");

                    b.Property<string>("Name");

                    b.Property<string>("SourcePath")
                        .IsRequired();

                    b.Property<string>("TargetPath")
                        .IsRequired();

                    b.HasKey("ID");

                    b.HasIndex("DeviceID", "CreateTime", "ID")
                        .IsUnique()
                        .HasName("UploadFile_Index");

                    b.ToTable("UploadFiles");
                });

            modelBuilder.Entity("Prey.Models.DesktopComputer", b =>
                {
                    b.HasBaseType("Prey.Models.DeviceBase");

                    b.Property<string>("CPU");

                    b.Property<string>("Disk");

                    b.Property<string>("GPU");

                    b.Property<string>("MAC");

                    b.Property<string>("Memory");

                    b.HasIndex("OwnerID", "ID")
                        .IsUnique()
                        .HasName("DesktopComputer_Index");

                    b.HasDiscriminator().HasValue("DesktopComputer");
                });

            modelBuilder.Entity("Prey.Models.LaptopComputer", b =>
                {
                    b.HasBaseType("Prey.Models.DeviceBase");

                    b.Property<string>("CPU");

                    b.Property<string>("Disk");

                    b.Property<string>("GPU");

                    b.Property<string>("MAC");

                    b.Property<string>("Memory");

                    b.HasIndex("OwnerID", "ID")
                        .IsUnique()
                        .HasName("LaptopComputer_Index");

                    b.HasDiscriminator().HasValue("LaptopComputer");
                });

            modelBuilder.Entity("Prey.Models.Phone", b =>
                {
                    b.HasBaseType("Prey.Models.DeviceBase");

                    b.Property<string>("PhoneNumber");

                    b.HasIndex("OwnerID", "ID")
                        .IsUnique()
                        .HasName("Phone_Index");

                    b.HasDiscriminator().HasValue("Phone");
                });

            modelBuilder.Entity("Prey.Models.Contact", b =>
                {
                    b.HasOne("Prey.Models.DeviceBase", "Device")
                        .WithMany("Contacts")
                        .HasForeignKey("DeviceID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Prey.Models.Location", b =>
                {
                    b.HasOne("Prey.Models.DeviceBase", "Device")
                        .WithMany("Locations")
                        .HasForeignKey("DeviceID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Prey.Models.UploadFile", b =>
                {
                    b.HasOne("Prey.Models.DeviceBase", "Device")
                        .WithMany("UploadFiles")
                        .HasForeignKey("DeviceID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Prey.Models.DesktopComputer", b =>
                {
                    b.HasOne("Prey.Models.Person", "Owner")
                        .WithMany("DesktopComputers")
                        .HasForeignKey("OwnerID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Prey.Models.LaptopComputer", b =>
                {
                    b.HasOne("Prey.Models.Person", "Owner")
                        .WithMany("LaptopComputers")
                        .HasForeignKey("OwnerID")
                        .HasConstraintName("FK_DeviceBase_Persons_OwnerID1")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Prey.Models.Phone", b =>
                {
                    b.HasOne("Prey.Models.Person", "Owner")
                        .WithMany("Phones")
                        .HasForeignKey("OwnerID")
                        .HasConstraintName("FK_DeviceBase_Persons_OwnerID2")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
